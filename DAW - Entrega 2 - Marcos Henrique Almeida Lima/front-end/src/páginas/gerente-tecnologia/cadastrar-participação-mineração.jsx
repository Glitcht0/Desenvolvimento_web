import { useContext, useRef, useState } from "react";
import { useNavigate } from "react-router-dom";
import { Button } from "primereact/button";
import { Card } from "primereact/card";
import { Checkbox } from "primereact/checkbox";
import { Divider } from "primereact/divider";
import { InputText } from "primereact/inputtext";
import { InputTextarea } from "primereact/inputtextarea";
import { Toast } from "primereact/toast";
import ContextoUsu√°rio from "../../contextos/contexto-usu√°rio";
import ContextoGerenteTecnologia from "../../contextos/contexto-gerente-tecnologia"; // üîÑ alterado
import { servi√ßoCadastrarParticipa√ß√£oMinera√ß√£o, servi√ßoRemoverParticipa√ß√£oMinera√ß√£o } from "../../servi√ßos/servi√ßos-gerente-tecnologia"; // üîÑ alterado
import mostrarToast from "../../utilit√°rios/mostrar-toast";
import { MostrarMensagemErro, checarListaVazia, validarCamposObrigat√≥rios } from "../../utilit√°rios/valida√ß√µes";
import { estilizarBot√£o, estilizarBot√£oRetornar, estilizarBot√£oRemover, estilizarCard,
    estilizarCheckbox, estilizarDivCampo, estilizarDivider, estilizarFlex, estilizarInlineFlex,
    estilizarInputText, estilizarInputTextarea, estilizarLabel } from "../../utilit√°rios/estilos";

export default function CadastrarParticipa√ß√£oMinera√ß√£o() { // üîÑ alterado
    const refer√™nciaToast = useRef(null);
    const { usu√°rioLogado } = useContext(ContextoUsu√°rio);
    const { participa√ß√£oMinera√ß√£oConsultada, patroc√≠nioSelecionado } = useContext(ContextoGerenteTecnologia); // üîÑ alterado
    const [dadosParticipa√ß√£o, setDadosParticipa√ß√£o] = useState({ // üîÑ alterado
        id_patroc√≠nio: patroc√≠nioSelecionado?.id || "",
        necessidade_contrato: participa√ß√£oMinera√ß√£oConsultada?.necessidade_contrato || "",
        justificativa: participa√ß√£oMinera√ß√£oConsultada?.justificativa || ""
    });
    const [errosParticipa√ß√£o, setErrosParticipa√ß√£o] = useState({});
    const navegar = useNavigate();

    function alterarEstado(event) { 
        const chave = event.target.name || event.value;
        let valor = event.target.value || event.checked;
        setDadosParticipa√ß√£o({ ...dadosParticipa√ß√£o, [chave]: valor });
    }

    function validarCampos() { 
        const { justificativa } = dadosParticipa√ß√£o;
        let erros = validarCamposObrigat√≥rios({ justificativa });
        setErrosParticipa√ß√£o(erros);
        return checarListaVazia(erros);
    }

    function patroc√≠nioLabel() { 
        if (participa√ß√£oMinera√ß√£oConsultada?.nome_empresa_patroc√≠nio || patroc√≠nioSelecionado)
            return "Patroc√≠nio Selecionado*:";
        else return "Selecione um Patroc√≠nio*:";
    }

    function irPesquisarPatroc√≠nio() { navegar("../pesquisar-patroc√≠nios"); } // üîÑ alterado
    function retonarAdministrarParticipa√ß√µesMinera√ß√£o() { navegar("../administrar-participa√ß√µes-minera√ß√£o"); } // üîÑ alterado

    async function cadastrarParticipa√ß√£oMinera√ß√£o() { // üîÑ alterado
        if (validarCampos()) {
            try {
                await servi√ßoCadastrarParticipa√ß√£oMinera√ß√£o({ ...dadosParticipa√ß√£o, cpf: usu√°rioLogado.cpf });
                mostrarToast(refer√™nciaToast, "Participa√ß√£o Minera√ß√£o cadastrada com sucesso!", "sucesso");
            } catch (error) {
                mostrarToast(refer√™nciaToast, error.response.data.erro, "erro");
            }
        }
    }

    async function removerParticipa√ß√£oMinera√ß√£o() { // üîÑ alterado
        try {
            await servi√ßoRemoverParticipa√ß√£oMinera√ß√£o(participa√ß√£oMinera√ß√£oConsultada.id);
            mostrarToast(refer√™nciaToast, "Participa√ß√£o Minera√ß√£o removida com sucesso!", "sucesso");
        } catch (error) {
            mostrarToast(refer√™nciaToast, error.response.data.erro, "erro");
        }
    }

    function Bot√µesA√ß√µes() { 
        if (participa√ß√£oMinera√ß√£oConsultada) {
            return (
                <div className={estilizarInlineFlex()}>
                    <Button className={estilizarBot√£oRetornar()} label="Retornar"
                        onClick={retonarAdministrarParticipa√ß√µesMinera√ß√£o} />
                    <Button className={estilizarBot√£oRemover()} label="Remover" onClick={removerParticipa√ß√£oMinera√ß√£o} />
                </div>
            );
        } else {
            return (
                <div className={estilizarInlineFlex()}>
                    <Button className={estilizarBot√£oRetornar()} label="Retornar"
                        onClick={retonarAdministrarParticipa√ß√µesMinera√ß√£o} />
                    <Button className={estilizarBot√£o()} label="Cadastrar" onClick={cadastrarParticipa√ß√£oMinera√ß√£o} />
                </div>
            );
        }
    }

    function tituloForm() { return participa√ß√£oMinera√ß√£oConsultada ? "Remover Participa√ß√£o Minera√ß√£o" : "Cadastrar Participa√ß√£o Minera√ß√£o"; } // üîÑ alterado

    function Patroc√≠nioInputText() { // üîÑ alterado
        if (patroc√≠nioSelecionado?.nome_empresa) {
            return <InputText name="nome_empresa_patroc√≠nio"
                className={estilizarInputText(errosParticipa√ß√£o.nome_empresa_patroc√≠nio, 400, usu√°rioLogado.cor_tema)}
                value={patroc√≠nioSelecionado?.nome_empresa} disabled />
        } else if (participa√ß√£oMinera√ß√£oConsultada?.patroc√≠nio?.nome_empresa) {
            return <InputText name="nome_empresa_patroc√≠nio"
                className={estilizarInputText(errosParticipa√ß√£o.nome_empresa_patroc√≠nio, 400, usu√°rioLogado.cor_tema)}
                value={participa√ß√£oMinera√ß√£oConsultada?.patroc√≠nio?.nome_empresa} disabled />
        } else return null;
    }

    function BotaoSelecionar() { // üîÑ alterado
        if (!patroc√≠nioSelecionado && !participa√ß√£oMinera√ß√£oConsultada) {
            return <Button className={estilizarBot√£o()} label="Selecionar" onClick={irPesquisarPatroc√≠nio} />
        } else if (patroc√≠nioSelecionado) {
            return <Button className={estilizarBot√£o()} label="Substituir" onClick={irPesquisarPatroc√≠nio} />;
        } else return null;
    }

    return (
        <div className={estilizarFlex()}>
            <Toast ref={refer√™nciaToast} onHide={retonarAdministrarParticipa√ß√µesMinera√ß√£o} position="bottom-center" />
            <Card title={tituloForm()} className={estilizarCard(usu√°rioLogado.cor_tema)}>
                <div className={estilizarDivCampo()}>
                    <label className={estilizarLabel(usu√°rioLogado.cor_tema)}>{patroc√≠nioLabel()}</label>
                    <BotaoSelecionar />
                    <Patroc√≠nioInputText />
                    <MostrarMensagemErro mensagem={errosParticipa√ß√£o.id} />
                </div>
                <div className={estilizarDivCampo()}>
                    <label className={estilizarLabel(usu√°rioLogado.cor_tema)}>Necessidade de Contrato*:</label>
                    <Checkbox name="necessidade_contrato" checked={dadosParticipa√ß√£o.necessidade_contrato}
                        className={estilizarCheckbox()} onChange={alterarEstado} autoResize />
                </div>
                <div className={estilizarDivCampo()}>
                    <label className={estilizarLabel(usu√°rioLogado.cor_tema)}>Justificativa*:</label>
                    <InputTextarea name="justificativa" value={dadosParticipa√ß√£o.justificativa}
                        className={estilizarInputTextarea(errosParticipa√ß√£o.descri√ß√£o, usu√°rioLogado.cor_tema)}
                        onChange={alterarEstado} autoResize cols={40} />
                    <MostrarMensagemErro mensagem={errosParticipa√ß√£o.justificativa} />
                </div>
                <Divider className={estilizarDivider()} />
                <Bot√µesA√ß√µes />
            </Card>
        </div>
    );
}
